datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  MANAGER
  APPLICANT
}

enum ApplicationResult {
  PENDING
  PASSED
  FAILED
}

enum QuestionType {
  TEXT
  MULTIPLE_CHOICE
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  name      String
  role      UserRole   @default(APPLICANT)
  positions Position[]
  createdAt DateTime   @default(now())
}

model Position {
  id           String        @id @default(cuid())
  title        String
  description  String
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  questions    Question[]
  applications Application[]
  createdAt    DateTime      @default(now())
}

model Question {
  id           String   @id @default(cuid())
  positionId   String
  order        Int
  title        String
  prompt       String
  voiceType    String // "ai" | "video" | "text"
  aiVideoUrl   String?
  uploadedMeta String? // JSON metadata for manager-uploaded interviewer video (filename, mimetype)
  position     Position @relation(fields: [positionId], references: [id])
  Answer       Answer[]
}

model Application {
  id            String            @id @default(cuid())
  positionId    String
  name          String
  email         String
  resumeUrl     String?
  startedAt     DateTime          @default(now())
  completedAt   DateTime?
  status        String            @default("in_progress") // in_progress | completed
  overallResult ApplicationResult @default(PENDING)
  answers       Answer[]
  position      Position          @relation(fields: [positionId], references: [id])
}

model Answer {
  id            String      @id @default(cuid())
  applicationId String
  questionId    String
  recordedMeta  String // JSON metadata describing the recorded file for simulation: { filename, mimetype, size, duration}
  recordedUrl   String? // optional URL placeholder (we won't persist real file for simulate-only)
  startedAt     DateTime?
  endedAt       DateTime?
  result        String?
  application   Application @relation(fields: [applicationId], references: [id])
  question      Question    @relation(fields: [questionId], references: [id])
}
